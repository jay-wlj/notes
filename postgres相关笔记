一、有表test里product字段jsonb值如下
  {"amount":12,"skus":[{"price":"12","stock":100,"id":1},{"price":"34","stock":100,"id":2}]}
1、更改jsonb字段的名称(如将skus更改为model)
  update test set product = product - 'skus' || jsonb_build_object('model', product->'skus');
2、读取skus数组第一个对象的price值
  select 'product'->'skus'->0->'price' from test;

PostgreSQL中JSON、JSONB基本操作符
PostgreSQL 9.5以上的版本中有了很多方便的操作符，使得操作 JSON 变得非常方便了。

一、 -> 和 ->> ：
-> 表示获取一个JSON数组元素，支持下标值(下标从0开始)、Key获取。->> 表示获取一个JSON对象字符串。

代码：
SELECT '[{"a":1},{"b":2},{"c":3}]'::JSON -> 1;

结果：
{"b":2}
 
以上，::JSON 表示声明前面的字符串为一个JSON字符串对象，而且PostgreSQL中的JSON、JSONB对象 Key的声明必须是字符串 。同时，1表示获取JSON数组中下标值为1的JSON对象。

二、 #> 和 #>> ：
在前一步，我们在一个JSON数组中可以使用 -> 下标值的方式来获取一个JSON对象。但是，如果我们我们检索的不是JSON数组，而是一个JSON对象中的JSON对象。很显然，这种下标获取的方式不再适用。不过，我们可以使用下面的方式来获取。

#> 表示获取指定路径的一个JSON对象，#>>表示获取指定路径的一个JSON对象的字符串。
代码：
SELECT '{"a":1,"b":{"ba":"b1","bb":"b2"},"c":3}'::JSON #> '{b}'

结果：
{"ba":"b1","bb":"b2"}

以上，我们使用 #> 方式来获取一个JSON对象中的JSON对象。
注意：
在获取一个JSON对象时，除非是JSON数组中的下标，必须要要用 { } 将JSON对象的 Key 包裹起来，否则会抛出异常。

 
